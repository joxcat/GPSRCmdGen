name: Release on tag

on:
  push:
    tags:
      - "v*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-upload-artifacts:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y --no-install-recommends mono-complete
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: make release
      - name: Pack for linux
        run: |
          for file in bin/Release/*.exe; do
            mkbundle --simple --static --nodeps \
              -L "$PWD/bin/Release" \
              -z "$file" bin/Release/*.dll \
              -o "$(echo $file | sed 's|.exe|-linux-x64|')" \
              --machine-config /etc/mono/4.5/machine.config \
              --config /etc/mono/config
          done
      - name: Rename for Windows
        run: |
          for file in bin/Release/*.exe; do
            mv "$file" "$(echo $file | sed -E 's|.exe|-windows.exe|')"
          done
      - name: Prepare release assets
        run: |
          mkdir GPSRCmdGen-bundle-windows
          cp bin/Release/*.exe bin/Release/*.dll GPSRCmdGen-bundle-windows
          zip -r GPSRCmdGen-bundle-windows.zip GPSRCmdGen-bundle-windows

          mkdir GPSRCmdGen-bundle-linux-x64
          cp bin/Release/*-linux-x64 GPSRCmdGen-bundle-linux-x64
          tar -czf GPSRCmdGen-bundle-linux-x64.tar.gz GPSRCmdGen-bundle-linux-x64
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            GPSRCmdGen-bundle-windows.zip
            GPSRCmdGen-bundle-linux-x64.tar.gz
            

  # build-docker-image:
  #   runs-on: ubuntu:latest
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v4
  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v3
  #   - name: Login with Docker registry
  #     uses: docker/login-action@v3
  #     with:
  #       registry: ${{ env.REGISTRY }}
  #       username: ${{ github.actor }}
  #       password: ${{ secrets.GITHUB_TOKEN }}
  #   - name: Extract metadata (tags, labels) for Docker
  #     id: meta
  #     uses: docker/metadata-action@v5
  #     with:
  #       images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  #   - name: Build and push Docker image
  #     uses: docker/build-push-action@v5
  #     with:
  #       context: .
  #       file: ./Dockerfile
  #       tags: ${{ steps.meta.outputs.tags }}
  #       labels: ${{ steps.meta.outputs.labels }}
  #       push: true